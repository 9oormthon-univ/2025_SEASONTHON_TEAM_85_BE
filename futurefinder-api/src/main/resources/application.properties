spring.application.name=futurefinder
spring.config.import=db.yml, optional:file:.env[.properties]
jwt.secret=mysecretkey12345asdfvasdfvhjaaaaaaaaaaaaaaaaaaaaaaaaaslfdjasdlkr231243123412
jwt.access-expiration=3600000
jwt.refresh-expiration=86400000
#jwt.token-prefix=Bearer
#jwt.access.header-string=access_token
#jwt.refresh.header-string=refresh_token



# AWS S3
cloud.aws.s3.bucket=${S3_BUCKET}
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.s3.base-url=https://s3.ap-northeast-2.amazonaws.com


# AWS cloud?
cloud.aws.region.static=ap-northeast-2
cloud.aws.region.auto=false
cloud.aws.stack.auto=false

# multipart file
spring.servlet.multipart.enabled=true
spring.servlet.multipart.maxFileSize=200MB
spring.servlet.multipart.maxRequestSize=300MB


# korea bank search
ecos.bok.base-url=https://ecos.bok.or.kr
ecos.bok.api-key=${ECOS_API_KEY}

# naver api
naver.openapi.client-id=${NAVER_CLIENT_ID}
naver.openapi.client-secret=${NAVER_CLIENT_SECRET}

# gonggong recruit
moef.recruitment.base-url=https://apis.data.go.kr/1051000/recruitment
moef.recruitment.service-key=${MOEF_RECRUITMENT_SERVICE_KEY}
moef.recruitment.timeout-seconds=15

# gonggong stock
krx.stock.base-url=https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService
krx.stock.service-key=${MOEF_RECRUITMENT_SERVICE_KEY}
krx.stock.timeout-seconds=8
krx.stock.page-size=100
krx.stock.max-back-days=7


